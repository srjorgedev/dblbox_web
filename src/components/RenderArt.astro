---
import type { Ability } from "../types/formated.character.v2";
interface Props {
    Data: Ability;
    Name: "strike" | "blast" | "special_art" | "special_move" | "ultimate" | "awaken";
    Label:
        | "Carta Fisica"
        | "Carta de Energia"
        | "Carta Especial"
        | "Movimiento Especial"
        | "Carta Definitiva"
        | "Carta Despertar"
        | "Carta Fisica Zenkai"
        | "Carta de Energia Zenkai"
        | "Carta Especial Zenkai"
        | "Movimiento Especial Zenkai"
        | "Carta Definitiva Zenkai"
        | "Carta Despertar Zenkai";
    Class?: string;
}

const { Data, Name, Class, Label } = Astro.props;
const className = Name === "special_art" ? "special-art" : Name === "special_move" ? "special-move" : Name;
---

<article class=`character-art art art-${className} ${className} ${Class ? Class : ""}`>
    <header>
        <aside><img src=`/card/${Name.toUpperCase()}.webp` alt=`${Name} card img` /></aside>
        <div class="art-title">
            <h2>{Label}</h2>
            <h3>{Data.title}</h3>
        </div>
    </header>
    <main>
        <pre>{Data.desc}</pre>
    </main>
</article>

<style>
    article {
        padding: 1rem;
        display: flex;
        flex-direction: column;
        background: transparent;
        border-radius: var(--round-md);
        outline: 2px solid transparent;
        width: 100%;

        &.strike {
            background: var(--bg-strike);
            outline-color: var(--bg-strike-2);
        }
        &.blast {
            background: var(--bg-blast);
            outline-color: var(--bg-blast-2);
        }
        &.special-art {
            background: var(--bg-special-art);
            outline-color: var(--bg-special-art-2);
        }
        &.special-move {
            background: var(--bg-special-move);
            outline-color: var(--bg-special-move-2);
        }
        &.ultimate {
            background: var(--bg-ultimate);
            outline-color: var(--bg-ultimate-2);
        }
        &.awaken {
            background: var(--bg-awaken);
            outline-color: var(--bg-awaken-2);
        }

        header {
            display: flex;
            flex-direction: row;
            gap: var(--round-lg);

            aside {
                flex: 0;
                display: flex;
                align-items: center;

                img {
                    height: 100%;
                    max-height: 60px;
                    width: auto;
                    object-fit: contain;
                }
            }

            .art-title {
                flex: 1;
                display: flex;
                flex-direction: column;
                gap: var(--round-sm);
                justify-content: center;

                h2 {
                    font-size: 0.5rem;
                    font-weight: normal;
                }

                h3 {
                    font-size: 0.7rem;
                }

                h2,
                h3 {
                    margin: 0;
                    padding: 0;
                    line-height: 1;
                    white-space: pre-wrap;
                    word-wrap: break-word;
                }
            }
        }

        main {
            margin-top: var(--round-md);

            pre {
                margin: 0;
                padding: 0;
                white-space: pre-wrap;
                word-wrap: break-word;
                font-size: 0.7rem;
            }
        }
    }

    @media (min-width: 769px) {
        article {
            header {
                .art-title {
                    h3 {
                        font-size: 1.3rem;
                    }
                    h2 {
                        font-size: 1.5rem;
                    }
                }
            }
            main {
                pre {
                    font-size: 0.9rem;
                }
            }
        }
    }
</style>
